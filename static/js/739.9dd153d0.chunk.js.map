{"version":3,"file":"static/js/739.9dd153d0.chunk.js","mappings":"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","sources":["components/Movie Route/MediaPage.js"],"sourcesContent":["import Layout from \"../Layout\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport requests from \"../../Constants\";\r\nimport axios from \"axios\";\r\nimport {Link, useHistory, useParams} from \"react-router-dom\";\r\nimport LoadSettingsData from \"../../LoadData\";\r\nimport {auth} from \"../../firebase\";\r\nimport personWithNoImage from \"../../Icons/no-person.svg\";\r\nimport justwatchIcon from \"../../Icons/justwatch_icon.png\";\r\n\r\nimport addToWatchlist, {\r\n    getMovieDataFromDB,\r\n    getWatchProviderLink,\r\n    saveRating,\r\n    getReleaseDateItem,\r\n    formatNumber, getMainTrailer\r\n} from \"../MovieActions\";\r\nimport {Popover, Rating, Tooltip} from \"@mui/material\";\r\nimport {HiHeart, HiOutlineHeart} from \"react-icons/hi\";\r\nimport \"./Movie.css\";\r\n\r\nexport default function MediaPage() {\r\n    let { movieId } = useParams();\r\n    let { televisionId } = useParams();\r\n    const isMovie = !!movieId;\r\n    const movieRequest = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${requests.key}&language=${document.getElementById(\"root\")?.getAttribute('langvalue')}&append_to_response=videos,images,alternative_titles,watch/providers,release_dates,credits`;\r\n    const tvRequest = `https://api.themoviedb.org/3/tv/${televisionId}?api_key=${requests.key}&language=${document.getElementById(\"root\")?.getAttribute('langvalue')}&append_to_response=credits,episode_groups,videos`;\r\n    const [item, setItem] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [castTab, setCastTab] = useState(true);\r\n    const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\r\n    const [releaseDates, setReleaseDates] = useState([]);\r\n    const [playTrailer, setPlayTrailer] = useState(false);\r\n    const [trailerPath, setTrailerPath] = useState('');\r\n    const [isOnWatchlist, setIsOnWatchlist] = useState(false);\r\n    const [rating, setRating] = useState(0);\r\n    const [isRated, setIsRated] = useState(false);\r\n    const [playLink, setPlayLink] = useState('');\r\n    const [ratingPopoverAnchorEl, setRatingPopoverAnchorEl] = React.useState(null);\r\n    const isRatingPopoverOpen = Boolean(ratingPopoverAnchorEl);\r\n    const ratingPopoverId = isRatingPopoverOpen ? 'movie-rating-popover' : undefined;\r\n\r\n    document.onmousedown = () => {\r\n        return true;\r\n    };\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(async (user) => {\r\n            if (user) {\r\n                setIsUserLoggedIn(true);\r\n                await LoadSettingsData().then(() => {\r\n                    axios.get(isMovie ? movieRequest : tvRequest).then((response) => {\r\n                        console.log(response.data);\r\n                        setItem(response.data);\r\n                        setMainTrailer(response.data);\r\n                        getMovieDataFromDB(response.data).then((r) => {\r\n                            setIsOnWatchlist(r[0]);\r\n                            if (r[1] === null) {\r\n                                setRating(0);\r\n                                setIsRated(false);\r\n                                return;\r\n                            }\r\n                            setRating(r[1]); setIsRated(r[2]); }).catch((err) => console.error(err));\r\n                        setPlayLink(getWatchProviderLink(response.data));\r\n                    }).then(() => {\r\n                        setIsLoading(false);\r\n                    }).catch((err) => console.error(err))\r\n                }).catch((err) => console.error(err))\r\n            } else {\r\n                setIsUserLoggedIn(false);\r\n                axios.get(isMovie ? movieRequest : tvRequest).then((response) => {\r\n                    console.log(response.data);\r\n                    setItem(response.data);\r\n                    setMainTrailer(response.data);\r\n                    setPlayLink(getWatchProviderLink(response.data));\r\n                }).then(() => {\r\n                    setIsLoading(false);\r\n                });\r\n            }\r\n        });\r\n    }, [movieRequest]);\r\n\r\n    function handleScreenResize() {\r\n        let ratio = window.innerWidth / window.innerHeight;\r\n        if (ratio < 1.2) {\r\n            document.getElementById(\"media_overview\").style.width = \"90vw\";\r\n            document.getElementById(\"media_cast\").style.width = \"90vw\";\r\n            document.getElementById(\"media_cast\").style.gridRowStart = 2;\r\n        } else {\r\n            document.getElementById(\"media_overview\").style.width = \"45vw\";\r\n            document.getElementById(\"media_cast\").style.width = \"45vw\";\r\n            document.getElementById(\"media_cast\").style.gridRowStart = 1;\r\n        }\r\n    }\r\n\r\n    function setReleases(location) {\r\n        if (!isMovie) return;\r\n\r\n        let dates = getReleaseDateItem(location, item);\r\n        if (location === document.getElementById(\"root\")?.getAttribute('locvalue')) setReleaseDates(dates);\r\n        return dates;\r\n    }\r\n\r\n    function setMainTrailer(data) {\r\n        setTrailerPath(getMainTrailer(data));\r\n    }\r\n\r\n    const handleRatingClose = () => {\r\n        setRatingPopoverAnchorEl(null);\r\n    };\r\n    const ratingClick = (event) => {\r\n        if (!isUserLoggedIn) return;\r\n\r\n        setRatingPopoverAnchorEl(event.currentTarget);\r\n    }\r\n    const handleRatingChange = (event, newValue) => {\r\n        saveRating(newValue, rating, item).then((r) => {\r\n            handleRatingClose();\r\n            if (r[1] === null) {\r\n                setRating(0);\r\n                setIsRated(false);\r\n                return;\r\n            }\r\n            setRating(r[1]);\r\n            setIsRated(r[0]);\r\n        });\r\n    }\r\n\r\n    const watchlistClick = () => {\r\n        if (!isUserLoggedIn) return;\r\n\r\n        if (isOnWatchlist) addToWatchlist({item, isOnWatchlist}).then((r) => {\r\n            setIsOnWatchlist(r[0]);\r\n        });\r\n        else addToWatchlist({item, isOnWatchlist}).then(() => {\r\n            setIsOnWatchlist(true);\r\n        });\r\n    }\r\n\r\n    function showTrailer() {\r\n        if (playTrailer) setPlayTrailer(false);\r\n        else setPlayTrailer(true);\r\n    }\r\n\r\n    function formatDate(date) {\r\n        if (date === \"\") return \"Not added\";\r\n        let loc = document.getElementById(\"root\")?.getAttribute('locvalue');\r\n        let options = {year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date(date).toLocaleDateString(loc ? loc : \"US\", options);\r\n    }\r\n\r\n    function formatEpisodeAndSeasonStrings(num, type) {\r\n        if (num !== 1) return num + type + \"s\";\r\n        else return num + type;\r\n    }\r\n\r\n    window.addEventListener('resize', handleScreenResize);\r\n\r\n    useHistory().listen(() => {\r\n        window.removeEventListener('resize', handleScreenResize);\r\n    });\r\n\r\n    return (\r\n        !isLoading && <Layout>\r\n            <div id=\"media_trailer\" className={`bg-black ${!playTrailer ? \"hidden\" : \"\"} w-screen h-screen mt-[-50px]`}>\r\n                {playTrailer ? <div className=\"top-0 left-0 w-full h-full absolute overflow-hidden rounded-xl\">\r\n                    <iframe src={`https://www.youtube.com/embed/${trailerPath}?autoplay=1&autohide=1?rel=0&amp&modestbranding=1`}\r\n                            title={item.title + \" Trailer\"}\r\n                            allowFullScreen loading=\"lazy\"\r\n                            className=\"w-full h-full\"></iframe>\r\n                </div> : undefined}\r\n            </div>\r\n            <div className={`h-full ${!playTrailer ? \"mt-[-50px]\" : \"\"}`} onLoad={handleScreenResize}>\r\n                <div id=\"movie_backdrop_ribbon\" className=\"inline-block w-[100vw] media_parent h-fit min-h-[100vh] justify-center movie_ribbon relative\" onLoad={() => setReleases(document.getElementById(\"root\")?.getAttribute('locvalue'))}>\r\n                    <img src={`https://image.tmdb.org/t/p/original/${item.backdrop_path}`} alt=\"\" className=\"w-[100vw] h-full rounded-b-3xl img_bg\"/>\r\n                    <div id=\"media_overview\" className=\"relative w-full h-full ml-[5vw] pt-[15vh] w-[45vw]\">\r\n                        <div className=\"flex_center w-full m-auto pr-[4vw] pl-[4vw]\">\r\n                            {item.genres?.map((item, id) => {\r\n                                if (id < 3) return <div key={id} className=\"bg-[#43495C] border-[#93A0C9] border-[1.5px] rounded-full w-full m-2 pt-2 pb-2 whitespace-nowrap\">{item.name}</div>;\r\n                            })}\r\n                        </div>\r\n                        <a href={`${item.homepage}`} className=\"font-bold text-[5vh]\">{isMovie ? item.title : item.name}</a>\r\n                        {item.belongs_to_collection ? <Link to={`/collection/${item.belongs_to_collection.id}/`}><div className=\"font-bold italic\">Part of the {item.belongs_to_collection.name}</div></Link> : null}\r\n                        {item.tagline ? <div className=\"mr-5 text-center w-full text-[#878787] text-[2vh] italic\">{item.tagline}</div> : null}\r\n                        {item.runtime ? <div>{item.runtime}m</div> : null}\r\n                        <div className=\"flex_center m-auto w-full mt-[5vh] font-bold whitespace-nowrap\">\r\n                            {playLink ? <Tooltip title={<img src={justwatchIcon} alt=\"JustWatch\" className=\"w-[10vw]\"/>} placement=\"top\">\r\n                                    <a href={playLink} className=\"bg-[#21232D] border-[#777EA3] border-[1.5px] rounded-full w-full m-2 pt-2 pb-2 cursor-pointer\">Play</a></Tooltip>\r\n                                : <div className=\"bg-[#21232D] border-[#777EA3] text-[#838383] border-[1.5px] rounded-full w-full m-2 pt-2 pb-2\">Play</div>}\r\n                            <div className=\"bg-[#21232D] border-[#777EA3] border-[1.5px] rounded-full w-full m-2 pt-2 pb-2 cursor-pointer\" onClick={() => watchlistClick()}>{isOnWatchlist ? \"Added to My List\" : \"Add to My List\"}</div>\r\n                            <div className=\"bg-[#21232D] border-[#777EA3] border-[1.5px] rounded-full w-full m-2 pt-2 pb-2 cursor-pointer\" onClick={ratingClick}>{isRated ? \"Rated \" + rating : \"Rate\"}</div>\r\n                            <Popover id={ratingPopoverId} open={isRatingPopoverOpen} anchorEl={ratingPopoverAnchorEl} onClose={handleRatingClose} anchorOrigin={{vertical: 'center', horizontal: 'center'}} transformOrigin={{vertical: 'center', horizontal: 'center'}}>\r\n                                <Rating name=\"rating\" value={rating} defaultValue={0} max={10} icon={<HiHeart/>} emptyIcon={<HiOutlineHeart/>} onChange={(event, newValue) => handleRatingChange(event, newValue)}/>\r\n                            </Popover>\r\n                        </div>\r\n                        <div className=\"rounded-full font-bold m-2 pt-2 pb-2 mt-5 cursor-pointer w-fit ml-auto mr-auto\" onClick={() => showTrailer()}>Play the Trailer</div>\r\n                        {item.overview ? <div className=\"mb-5 mr-5 text-white italic mt-[2vh] overflow-y-auto\">{item.overview}</div> : null}\r\n                        {item.budget ? <div>Budget: {formatNumber(item.budget)}</div> : null}\r\n                        {item.revenue ? <div>Revenue: {formatNumber(item.revenue)}</div> : null}\r\n                        {item.number_of_episodes ? <div>{formatEpisodeAndSeasonStrings(item.number_of_episodes, \" Episode\")}</div> : null}\r\n                        {item.number_of_seasons ? <div>{formatEpisodeAndSeasonStrings(item.number_of_seasons, \" Season\")}</div> : null}\r\n                        <div>Status: {item.status}</div>\r\n                        {item.type ? <div>Type: {item.type}</div> : null}\r\n                        <Tooltip title={ <div className=\"w-[100%] text-[2vh] inline-block\"><div className=\"font-bold w-[100%] text-[2vh]\">Production Countries:</div>\r\n                            {item.production_countries?.map((country, id) => ( <div key={id}  className=\"w-[100%] text-[2vh]\">{country.name} ({country.iso_3166_1})</div> ))}\r\n                            <div className=\"font-bold w-[100%] text-[2vh]\">Production Companies:</div>\r\n                            {item.production_companies?.map((company, id) => ( <div key={id} className=\"w-[100%] text-[2vh]\">{company.name}</div> ))} </div>} placement=\"bottom\">\r\n                            <div className=\"mt-3 text-[#878787] text-[2vh] italic\">Hover to see production info</div>\r\n                        </Tooltip>\r\n                        {isMovie ? <Link to={`/movie/${movieId}/releases/`}><div className=\"font-bold mt-3\">Release Dates {document.getElementById(\"root\")?.getAttribute('locvalue') ? \"(\" + document.getElementById(\"root\")?.getAttribute('locvalue') + \")\" : \"\"}</div></Link> : <div className=\"font-bold mt-3\">Release Dates</div>}\r\n                        {isMovie ? <div className=\"mb-5\">{releaseDates[0] ? releaseDates.map((date, id) => (\r\n                            <div key={id}>{date}</div>\r\n                        )) : <div>No Dates Added\r\n                            <Link to={`/movie/${movieId}/releases/`}><div className=\"font-bold\">Release Dates (US)</div></Link>\r\n                            {setReleases(\"US\")?.map((date, id) => (\r\n                                <div key={id}>{date}</div>\r\n                            ))}\r\n                        </div>}</div> : <div>\r\n                            <div>First Air Date: {formatDate(item.first_air_date)}</div>\r\n                            <div>Last Air Date: {formatDate(item.last_air_date)}</div>\r\n                        </div>}\r\n                    </div>\r\n                    <div id=\"media_cast\" className=\"relative w-[40vw] h-[85vh] mt-[15vh] mr-[5vw] ml-auto right-0 overflow-y-scroll rounded-2xl\">\r\n                        <div className=\"flex_center absolute right-0 h-[4vh] w-full\">\r\n                            <div className={`font-bold mr-5 text-[3vh] cursor-pointer ${castTab ? \"\" : \"text-[#878787]\"}`} onClick={() => setCastTab(true)}>Cast</div>\r\n                            <div className={`font-bold text-[3vh] cursor-pointer ${!castTab ? \"\" : \"text-[#878787]\"}`} onClick={() => setCastTab(false)}>Crew</div>\r\n                        </div>\r\n                        {castTab ? item.credits?.cast?.map((cast, id) => (\r\n                            <Link to={`/person/${cast.id}/`} key={id} className=\"mr-5 mt-[4vh] w-full whitespace-pre-wrap rounded-2xl flex overflow-y-clip relative mb-2\">\r\n                                <div className=\"cast_names h-full m-auto\">\r\n                                    <div className=\"font-bold\">{cast.name}</div>\r\n                                    <div>{cast.character}</div>\r\n                                </div>\r\n                                <img src={cast.profile_path ? `https://image.tmdb.org/t/p/w500/${cast.profile_path}` : personWithNoImage} alt={cast.name} className=\"w-[25%] rounded-2xl\"/>\r\n                            </Link>\r\n                        )) : item.credits?.crew?.map((crew, id) => (\r\n                            <Link to={`/person/${crew.id}/`} key={id} className=\"mr-5 mt-[4vh] w-full whitespace-pre-wrap rounded-2xl flex overflow-y-clip relative mb-2\">\r\n                                <div className=\"cast_names h-full m-auto\">\r\n                                    <div className=\"font-bold\">{crew.name}</div>\r\n                                    <div>{crew.job}</div>\r\n                                </div>\r\n                                <img src={crew.profile_path ? `https://image.tmdb.org/t/p/w500/${crew.profile_path}` : personWithNoImage} alt={crew.name} className=\"w-[25%] rounded-2xl\"/>\r\n                            </Link>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}"],"names":["MediaPage","movieId","useParams","televisionId","isMovie","movieRequest","requests","document","getElementById","getAttribute","tvRequest","useState","item","setItem","isLoading","setIsLoading","castTab","setCastTab","isUserLoggedIn","setIsUserLoggedIn","releaseDates","setReleaseDates","playTrailer","setPlayTrailer","trailerPath","setTrailerPath","isOnWatchlist","setIsOnWatchlist","rating","setRating","isRated","setIsRated","playLink","setPlayLink","React","ratingPopoverAnchorEl","setRatingPopoverAnchorEl","isRatingPopoverOpen","Boolean","ratingPopoverId","undefined","handleScreenResize","window","innerWidth","innerHeight","style","width","gridRowStart","setReleases","location","dates","getReleaseDateItem","setMainTrailer","data","getMainTrailer","onmousedown","useEffect","auth","user","LoadSettingsData","then","axios","response","console","log","getMovieDataFromDB","r","catch","err","error","getWatchProviderLink","handleRatingClose","formatDate","date","loc","Date","toLocaleDateString","year","month","day","formatEpisodeAndSeasonStrings","num","type","addEventListener","useHistory","listen","removeEventListener","Layout","id","className","src","title","allowFullScreen","loading","onLoad","backdrop_path","alt","genres","map","name","href","homepage","belongs_to_collection","to","tagline","runtime","Tooltip","justwatchIcon","placement","onClick","addToWatchlist","event","currentTarget","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Rating","value","defaultValue","max","icon","emptyIcon","onChange","newValue","saveRating","handleRatingChange","overview","budget","formatNumber","revenue","number_of_episodes","number_of_seasons","status","production_countries","country","iso_3166_1","production_companies","company","first_air_date","last_air_date","credits","cast","character","profile_path","personWithNoImage","crew","job"],"sourceRoot":""}
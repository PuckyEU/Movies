{"version":3,"file":"static/js/471.79d77582.chunk.js","mappings":"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","sources":["components/Collection.js"],"sourcesContent":["import Layout from \"./Layout\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport requests from \"../Constants\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {auth} from \"../firebase\";\r\nimport LoadSettingsData from \"../LoadData\";\r\nimport axios from \"axios\";\r\nimport ListCard from \"./ListCard\";\r\n\r\nexport default function Collection() {\r\n    let { collectionId } = useParams();\r\n    const collectionRequest = `https://api.themoviedb.org/3/collection/${collectionId}?api_key=${requests.key}&language=${document.getElementById(\"root\")?.getAttribute('langvalue')}`;\r\n    const [item, setItem] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [itemPadding, setItemPadding] = useState('p-5');\r\n    const [titleDisplay, setTitleDisplay] = useState('flex_center absolute');\r\n    const [bgImageVisible, setBgImageVisible] = useState(true);\r\n    const [posterSize, setPosterSize] = useState('h-full');\r\n    const [scaleValue, setScaleValue] = useState('vw');\r\n    const [ribbonHeight, setRibbonHeight] = useState('50vh')\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(async (user) => {\r\n            if (user) {\r\n                await LoadSettingsData().then(() => {\r\n                    axios.get(collectionRequest).then((response) => {\r\n                        console.log(response.data);\r\n                        setItem(response.data);\r\n                    }).then(() => {\r\n                        setIsLoading(false);\r\n                    }).catch((err) => console.error(err))\r\n                }).catch((err) => console.error(err))\r\n            } else {\r\n                axios.get(collectionRequest).then((response) => {\r\n                    console.log(response.data);\r\n                    setItem(response.data);\r\n                }).then(() => {\r\n                    setIsLoading(false);\r\n                }).catch((err) => console.error(err))\r\n            }\r\n        });\r\n    }, [collectionRequest]);\r\n\r\n    function handleScreenResize() {\r\n        const ratio = window.innerWidth / window.innerHeight;\r\n        if (ratio < 1) {\r\n            setItemPadding(\"p-0 pt-5\");\r\n            setTitleDisplay('inline_block');\r\n            setBgImageVisible(false);\r\n            setPosterSize('w-[50%]')\r\n            setScaleValue('vh');\r\n            setRibbonHeight(\"fit-content\");\r\n        } else {\r\n            setItemPadding(\"p-5\");\r\n            setTitleDisplay('flex_center absolute');\r\n            setBgImageVisible(true);\r\n            setPosterSize('h-full');\r\n            setScaleValue('vw');\r\n            setRibbonHeight('50vh');\r\n        }\r\n    }\r\n\r\n    window.addEventListener('resize', handleScreenResize);\r\n\r\n    useHistory().listen(() => {\r\n        window.removeEventListener('resize', handleScreenResize);\r\n    });\r\n\r\n    return (\r\n        !isLoading && <Layout>\r\n            <div id=\"collection_ribbon\" className={`w-full mt-5 h-[${ribbonHeight}] flex_center border-b-2 border-t-2 border-[#FFFFFF] whitespace-nowrap relative`} onLoad={handleScreenResize}>\r\n                {bgImageVisible ? <div className=\"w-full h-full\">\r\n                    <img src={`https://image.tmdb.org/t/p/original/${item.backdrop_path}`} alt={\"\"} className=\"w-full h-full img_bg\"/>\r\n                </div> : null}\r\n                <div className={`p-5 whitespace-pre-wrap w-full h-full ${titleDisplay}`}>\r\n                    <img src={`https://image.tmdb.org/t/p/original/${item.poster_path}`} alt={\"\"} className={`${posterSize} aspect-auto border-2 border-[#FFFFFF] rounded-3xl`}/>\r\n                    <div className=\"inline-block text-left\">\r\n                        <div className={`font-bold text-[4${scaleValue}] ml-5`}>{item.name}</div>\r\n                        <div className={`text-[2${scaleValue}] ml-5`}>{item.overview}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`whitespace-nowrap ${itemPadding}`}>\r\n                {item.parts.map((item, id) => (<ListCard key={id} item={item} deleteButton={false} showRating={false} isTV={false} isPerson={false}/>))}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}"],"names":["Collection","collectionId","useParams","collectionRequest","requests","document","getElementById","getAttribute","useState","item","setItem","isLoading","setIsLoading","itemPadding","setItemPadding","titleDisplay","setTitleDisplay","bgImageVisible","setBgImageVisible","posterSize","setPosterSize","scaleValue","setScaleValue","ribbonHeight","setRibbonHeight","handleScreenResize","window","innerWidth","innerHeight","useEffect","auth","user","LoadSettingsData","then","axios","response","console","log","data","catch","err","error","addEventListener","useHistory","listen","removeEventListener","id","className","onLoad","src","backdrop_path","alt","poster_path","name","overview","parts","map","deleteButton","showRating","isTV","isPerson"],"sourceRoot":""}
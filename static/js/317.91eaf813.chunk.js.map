{"version":3,"file":"static/js/317.91eaf813.chunk.js","mappings":"+RASe,SAASA,IAAU,IAAD,EACvBC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACAE,EAAa,4DAAwDC,EAAAA,GAAAA,IAAxD,+BAAiFC,SAASC,eAAe,eAAzG,aAAiF,EAAiCC,aAAa,aAA/H,kBAAqJN,EAArJ,uBACnB,GAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAAA,mBAAA,yCAAwB,WAAOC,GAAP,0EAChBA,EADgB,iCAEVC,EAAAA,EAAAA,KAAmBC,MAAK,WAC1BC,IAAAA,IAAUf,GAAec,MAAK,SAACE,GAC3BC,QAAQC,IAAIF,EAASG,MACrBZ,EAAQS,EAASG,KACpB,IAAEL,MAAK,WACJL,GAAa,EAChB,IAAEW,OAAM,SAACC,GAAD,OAASJ,QAAQC,IAAIG,EAArB,GACZ,IAAED,OAAM,SAACC,GAAD,OAASJ,QAAQC,IAAIG,EAArB,IATO,2CAAxB,sDAYH,GAAE,CAACrB,KASCQ,IAAa,SAAC,IAAD,WACV,gBAAKc,UAAU,YAAf,SACKhB,EAAKiB,QAAQC,KAAI,SAAClB,EAAMmB,GAAP,OAT9B,SAAuBC,EAAQD,GAC3B,MAA0B,UAAtBC,EAAOC,YAA+B,SAAC,IAAD,CAAmBrB,KAAMoB,EAAQE,cAAc,EAAOC,YAAY,EAAOC,MAAM,EAAOC,UAAU,GAAjFN,GAC/B,OAAtBC,EAAOC,YAA4B,SAAC,IAAD,CAAmBrB,KAAMoB,EAAQE,cAAc,EAAOC,YAAY,EAAOC,MAAM,EAAMC,UAAU,GAAhFN,GAC5B,WAAtBC,EAAOC,YAAgC,SAAC,IAAD,CAAmBrB,KAAMoB,EAAQE,cAAc,EAAOC,YAAY,EAAOC,MAAM,EAAOC,UAAU,GAAjFN,QAA1D,CACH,CAMeO,CAAc1B,EAAMmB,EADN,OAMjC,C","sources":["components/Search.js"],"sourcesContent":["import Layout from \"./Layout\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {auth} from \"../firebase\";\r\nimport LoadSettingsData from \"../LoadData\";\r\nimport axios from \"axios\";\r\nimport requests from \"../Constants\";\r\nimport ListCard from \"./ListCard\";\r\n\r\nexport default function Search() {\r\n    let { searchParams } = useParams();\r\n    const searchRequest = `https://api.themoviedb.org/3/search/multi?api_key=${requests.key}&language=${document.getElementById(\"root\")?.getAttribute('langvalue')}&query=${searchParams}&include_adult=true`;\r\n    const [item, setItem] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(async (user) => {\r\n            if (user) {\r\n                await LoadSettingsData().then(() => {\r\n                    axios.get(searchRequest).then((response) => {\r\n                        console.log(response.data);\r\n                        setItem(response.data);\r\n                    }).then(() => {\r\n                        setIsLoading(false);\r\n                    }).catch((err) => console.log(err))\r\n                }).catch((err) => console.log(err))\r\n            }\r\n        });\r\n    }, [searchRequest]);\r\n\r\n    function getResultType(result, id) {\r\n        if (result.media_type === \"movie\") return <ListCard key={id} item={result} deleteButton={false} showRating={false} isTV={false} isPerson={false}/>;\r\n        if (result.media_type === \"tv\") return <ListCard key={id} item={result} deleteButton={false} showRating={false} isTV={true} isPerson={false}/>;\r\n        if (result.media_type === \"person\") return <ListCard key={id} item={result} deleteButton={false} showRating={false} isTV={false} isPerson={true}/>;\r\n    }\r\n\r\n    return (\r\n        !isLoading && <Layout>\r\n            <div className=\"h-fit p-5\">\r\n                {item.results.map((item, id) => (\r\n                    getResultType(item, id)\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}"],"names":["Search","searchParams","useParams","searchRequest","requests","document","getElementById","getAttribute","useState","item","setItem","isLoading","setIsLoading","useEffect","auth","user","LoadSettingsData","then","axios","response","console","log","data","catch","err","className","results","map","id","result","media_type","deleteButton","showRating","isTV","isPerson","getResultType"],"sourceRoot":""}
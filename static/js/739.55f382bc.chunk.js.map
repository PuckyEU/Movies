{"version":3,"file":"static/js/739.55f382bc.chunk.js","mappings":"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","sources":["components/Movie Route/MediaPage.js"],"sourcesContent":["import Layout from \"../Layout\";\nimport React, {useEffect, useState} from \"react\";\nimport requests from \"../../Constants\";\nimport axios from \"axios\";\nimport {Link, useHistory, useParams} from \"react-router-dom\";\nimport LoadSettingsData from \"../../LoadData\";\nimport {auth, db} from \"../../firebase\";\nimport personWithNoImage from \"../../Icons/no-person.svg\";\nimport justwatchIcon from \"../../Icons/justwatch_icon.png\";\n\nimport addToWatchlist, {\n    formatDate,\n    formatNumber,\n    getMainTrailer,\n    getMovieDataFromDB,\n    getReleaseDateItem,\n    getWatchProviderLink,\n    saveRating\n} from \"../MovieActions\";\nimport {Popover, Rating, Tooltip} from \"@mui/material\";\nimport {HiHeart, HiOutlineHeart} from \"react-icons/hi\";\nimport \"./Movie.css\";\nimport {doc, setDoc} from \"firebase/firestore\";\nimport imdbIcon from \"../../Icons/imdb_favicon.png\";\n\nexport default function MediaPage() {\n    let { movieId } = useParams();\n    let { televisionId } = useParams();\n    const isMovie = !!movieId;\n    const movieRequest = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${requests.key}&language=${document.getElementById(\"root\")?.getAttribute('langvalue')}&append_to_response=videos,images,alternative_titles,watch/providers,release_dates,credits`;\n    const tvRequest = `https://api.themoviedb.org/3/tv/${televisionId}?api_key=${requests.key}&language=${document.getElementById(\"root\")?.getAttribute('langvalue')}&append_to_response=credits,episode_groups,videos`;\n    const [item, setItem] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [castTab, setCastTab] = useState(true);\n    const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n    const [releaseDates, setReleaseDates] = useState([]);\n    const [playTrailer, setPlayTrailer] = useState(false);\n    const [trailerPath, setTrailerPath] = useState('');\n    const [userLists, setUserLists] = useState([]);\n    const [isOnWatchlist, setIsOnWatchlist] = useState(false);\n    const [rating, setRating] = useState(0);\n    const [isRated, setIsRated] = useState(false);\n    const [playLink, setPlayLink] = useState('');\n    const [ratingPopoverAnchorEl, setRatingPopoverAnchorEl] = React.useState(null);\n    const isRatingPopoverOpen = Boolean(ratingPopoverAnchorEl);\n    const ratingPopoverId = isRatingPopoverOpen ? 'movie-rating-popover' : undefined;\n    const [listPopoverAnchorEl, setListPopoverAnchorEl] = React.useState(null);\n    const isListPopoverOpen = Boolean(listPopoverAnchorEl);\n    const listPopoverId = isListPopoverOpen ? 'movie-list-popover' : undefined;\n\n    document.onmousedown = () => {\n        return true;\n    };\n\n    useEffect(() => {\n        auth.onAuthStateChanged(async (user) => {\n            if (user) {\n                setIsUserLoggedIn(true);\n                await LoadSettingsData().then(() => {\n                    axios.get(isMovie ? movieRequest : tvRequest).then((response) => {\n                        console.log(response.data);\n                        setItem(response.data);\n                        setMainTrailer(response.data);\n                        getMovieDataFromDB(response.data).then((r) => {\n                            setIsOnWatchlist(r[0]);\n                            if (r[1] === null) {\n                                setRating(0);\n                                setIsRated(false);\n                                return;\n                            }\n                            setRating(r[1]);\n                            setIsRated(r[2]);\n                            setUserLists(r[3]);\n                        }).catch((err) => console.error(err));\n                        setPlayLink(getWatchProviderLink(response.data));\n                    }).then(() => {\n                        setIsLoading(false);\n                    }).catch((err) => console.error(err))\n                }).catch((err) => console.error(err))\n            } else {\n                setIsUserLoggedIn(false);\n                axios.get(isMovie ? movieRequest : tvRequest).then((response) => {\n                    console.log(response.data);\n                    setItem(response.data);\n                    setMainTrailer(response.data);\n                    setPlayLink(getWatchProviderLink(response.data));\n                }).then(() => {\n                    setIsLoading(false);\n                });\n            }\n        });\n    }, [movieRequest]);\n\n    function handleScreenResize() {\n        let ratio = window.innerWidth / window.innerHeight;\n        if (ratio < 1.2) {\n            document.getElementById(\"media_overview\").style.width = \"90vw\";\n            document.getElementById(\"media_cast\").style.width = \"90vw\";\n            document.getElementById(\"media_cast\").style.gridRowStart = 2;\n        } else {\n            document.getElementById(\"media_overview\").style.width = \"45vw\";\n            document.getElementById(\"media_cast\").style.width = \"45vw\";\n            document.getElementById(\"media_cast\").style.gridRowStart = 1;\n        }\n    }\n\n    function setReleases(location) {\n        if (!isMovie) return;\n\n        let dates = getReleaseDateItem(location, item);\n        if (location === document.getElementById(\"root\")?.getAttribute('locvalue')) setReleaseDates(dates);\n        return dates;\n    }\n\n    function setMainTrailer(data) {\n        setTrailerPath(getMainTrailer(data));\n    }\n\n    const handleRatingClose = () => {\n        setRatingPopoverAnchorEl(null);\n    };\n    const ratingClick = (event) => {\n        if (!isUserLoggedIn) return;\n\n        setRatingPopoverAnchorEl(event.currentTarget);\n    }\n    const handleRatingChange = (event, newValue) => {\n        saveRating(newValue, rating, item).then((r) => {\n            handleRatingClose();\n            if (r[1] === null) {\n                setRating(0);\n                setIsRated(false);\n                return;\n            }\n            setRating(r[1]);\n            setIsRated(r[0]);\n        });\n    }\n    const handleListPopoverClose = () => {\n        setListPopoverAnchorEl(null);\n    };\n    const listClick = (event) => {\n        if (!isUserLoggedIn) return;\n\n        setListPopoverAnchorEl(event.currentTarget);\n    }\n\n    const watchlistClick = () => {\n        if (!isUserLoggedIn) return;\n\n        if (isOnWatchlist) addToWatchlist({item, isOnWatchlist}).then((r) => {\n            setIsOnWatchlist(r[0]);\n        });\n        else addToWatchlist({item, isOnWatchlist}).then(() => {\n            setIsOnWatchlist(true);\n        });\n    }\n\n    async function addItemToList(listItem) {\n        let list = listItem.movies;\n        const info = {};\n        info.id = item.id;\n        if (item.title) info.title = item.title;\n        if (item.name) info.name = item.name;\n        if (item.poster_path) info.poster_path = item.poster_path;\n        if (item.profile_path) info.profile_path = item.profile_path;\n        if (item.backdrop_path) info.backdrop_path = item.backdrop_path;\n        if (item.release_date) info.release_date = item.release_date;\n        if (item.overview) info.overview = item.overview;\n        if (item.biography) info.biography = item.biography;\n        list.push(info);\n        console.log(list);\n        const user = auth.currentUser.uid.toString().trim();\n        try {\n            await setDoc(doc(db, \"users\", user, \"lists\", listItem.name.toString()), {\n                name: listItem.name,\n                description: listItem.description,\n                backdrop: listItem.backdrop,\n                movies: list\n            });\n            handleListPopoverClose();\n        } catch (e) {\n            console.error(\"Error adding document: \", e);\n        }\n    }\n\n    function showTrailer() {\n        if (playTrailer) setPlayTrailer(false);\n        else setPlayTrailer(true);\n    }\n\n    function formatEpisodeAndSeasonStrings(num, type) {\n        if (num !== 1) return num + type + \"s\";\n        else return num + type;\n    }\n\n    window.addEventListener('resize', handleScreenResize);\n\n    useHistory().listen(() => {\n        window.removeEventListener('resize', handleScreenResize);\n    });\n\n    return (\n        !isLoading && <Layout>\n            <div id=\"media_trailer\" className={`bg-black ${!playTrailer ? \"hidden\" : \"\"} w-screen h-screen mt-[-50px]`}>\n                {playTrailer ? <div className=\"top-0 left-0 w-full h-full absolute overflow-hidden rounded-xl\">\n                    <iframe src={`https://www.youtube.com/embed/${trailerPath}?autoplay=1&autohide=1?rel=0&amp&modestbranding=1`}\n                            title={item.title + \" Trailer\"}\n                            allowFullScreen loading=\"lazy\"\n                            className=\"w-full h-full\"></iframe>\n                </div> : undefined}\n            </div>\n            <div className={`h-full ${!playTrailer ? \"mt-[-50px]\" : \"\"}`} onLoad={handleScreenResize}>\n                <div id=\"movie_backdrop_ribbon\" className=\"inline-block w-[100vw] media_parent h-fit min-h-[100vh] justify-center movie_ribbon relative\" onLoad={() => setReleases(document.getElementById(\"root\")?.getAttribute('locvalue'))}>\n                    <img src={`https://image.tmdb.org/t/p/original/${item.backdrop_path}`} alt=\"\" className=\"w-[100vw] h-full rounded-b-3xl img_bg\"/>\n                    <div id=\"media_overview\" className=\"relative w-full h-full ml-[5vw] pt-[15vh] w-[45vw]\">\n                        <div className=\"flex_center m-2\">\n                            {item.imdb_id ?\n                                <a href={\"https://www.imdb.com/title/\" + item.imdb_id + \"/\"}><img id=\"imdb_icon\" src={imdbIcon} alt=\"IMDb\" className=\"w-[4vh] mr-2\"/></a>\n                                : null}\n                            <a href={isMovie ? \"https://www.themoviedb.org/movie/\" + movieId : \"https://www.themoviedb.org/tv/\" + televisionId}><img id=\"imdb_icon\" src={\"https://www.themoviedb.org/favicon.ico\"} alt=\"IMDb\" className=\"w-[4vh]\"/></a>\n                        </div>\n                        <div className=\"flex_center w-full m-auto pr-[4vw] pl-[4vw]\">\n                            {item.genres?.map((item, id) => {\n                                if (id < 3) return <div key={id} className=\"bg-[#43495C] border-[#93A0C9] border-[1.5px] rounded-full w-full m-2 pt-2 pb-2 whitespace-nowrap\">{item.name}</div>;\n                            })}\n                        </div>\n                        {item.homepage ? <a href={`${item.homepage}`} className=\"font-bold text-[5vh]\">{isMovie ? item.title : item.name}</a> : <div className=\"font-bold text-[5vh]\">{isMovie ? item.title : item.name}</div>}\n                        {item.belongs_to_collection ? <Link to={`/collection/${item.belongs_to_collection.id}/`}><div className=\"font-bold italic\">Part of the {item.belongs_to_collection.name}</div></Link> : null}\n                        {item.tagline ? <div className=\"mr-5 text-center w-full text-[#878787] text-[2vh] italic\">{item.tagline}</div> : null}\n                        {item.runtime ? <div>{item.runtime}m</div> : null}\n                        <div className=\"flex_center m-auto w-full mt-[5vh] font-bold whitespace-nowrap\">\n                            {playLink ? <Tooltip title={<img src={justwatchIcon} alt=\"JustWatch\" className=\"w-[10vw]\"/>} placement=\"top\">\n                                    <a href={playLink} className=\"bg-[#21232D] border-[#777EA3] border-[1.5px] rounded-full w-full m-2 pt-2 pb-2 cursor-pointer\">Play</a></Tooltip>\n                                : <div className=\"bg-[#21232D] border-[#777EA3] text-[#838383] border-[1.5px] rounded-full w-full m-2 pt-2 pb-2\">Play</div>}\n                            <div className=\"bg-[#21232D] border-[#777EA3] border-[1.5px] rounded-full w-full m-2 pt-2 pb-2 cursor-pointer\" onClick={listClick}>{isOnWatchlist ? \"Added to My List\" : \"Add to My List\"}</div>\n                            <Popover id={listPopoverId} open={isListPopoverOpen} anchorEl={listPopoverAnchorEl} onClose={handleListPopoverClose} anchorOrigin={{vertical: 'center', horizontal: 'center'}} transformOrigin={{vertical: 'center', horizontal: 'center'}}>\n                                <div className=\"p-5 pb-3 pt-3 bg-[#21232D] border-[#777EA3] border-b-[1.5px] text-white flex_center cursor-pointer\" onClick={() => watchlistClick()}>Watchlist</div>\n                                {userLists?.map((item, id) => (\n                                    <div key={id} className=\"p-5 pb-3 pt-3 bg-[#21232D] border-[#777EA3] border-b-[1.5px] text-white flex_center cursor-pointer\" onClick={() => addItemToList(item)}>{item.name}</div>\n                                ))}\n                            </Popover>\n                            <div className=\"bg-[#21232D] border-[#777EA3] border-[1.5px] rounded-full w-full m-2 pt-2 pb-2 cursor-pointer\" onClick={ratingClick}>{isRated ? \"Rated \" + rating : \"Rate\"}</div>\n                            <Popover id={ratingPopoverId} open={isRatingPopoverOpen} anchorEl={ratingPopoverAnchorEl} onClose={handleRatingClose} anchorOrigin={{vertical: 'center', horizontal: 'center'}} transformOrigin={{vertical: 'center', horizontal: 'center'}}>\n                                <Rating name=\"rating\" value={rating} defaultValue={0} max={10} icon={<HiHeart/>} emptyIcon={<HiOutlineHeart/>} onChange={(event, newValue) => handleRatingChange(event, newValue)}/>\n                            </Popover>\n                        </div>\n                        <div className=\"rounded-full font-bold m-2 pt-2 pb-2 mt-5 cursor-pointer w-fit ml-auto mr-auto\" onClick={() => showTrailer()}>Play the Trailer</div>\n                        {item.overview ? <div className=\"mb-5 mr-5 text-white italic mt-[2vh] overflow-y-auto\">{item.overview}</div> : null}\n                        {item.budget ? <div>Budget: {formatNumber(item.budget)}</div> : null}\n                        {item.revenue ? <div>Revenue: {formatNumber(item.revenue)}</div> : null}\n                        {item.number_of_episodes ? <div>{formatEpisodeAndSeasonStrings(item.number_of_episodes, \" Episode\")}</div> : null}\n                        {item.number_of_seasons ? <div>{formatEpisodeAndSeasonStrings(item.number_of_seasons, \" Season\")}</div> : null}\n                        <div>Status: {item.status}</div>\n                        {item.type ? <div>Type: {item.type}</div> : null}\n                        <Tooltip title={ <div className=\"w-[100%] text-[2vh] inline-block\"><div className=\"font-bold w-[100%] text-[2vh]\">Production Countries:</div>\n                            {item.production_countries?.map((country, id) => ( <div key={id}  className=\"w-[100%] text-[2vh]\">{country.name} ({country.iso_3166_1})</div> ))}\n                            <div className=\"font-bold w-[100%] text-[2vh]\">Production Companies:</div>\n                            {item.production_companies?.map((company, id) => ( <div key={id} className=\"w-[100%] text-[2vh]\">{company.name}</div> ))} </div>} placement=\"bottom\">\n                            <div className=\"mt-3 text-[#878787] text-[2vh] italic\">Hover to see production info</div>\n                        </Tooltip>\n                        {isMovie ? <Link to={`/movie/${movieId}/releases/`}><div className=\"font-bold mt-3\">Release Dates {document.getElementById(\"root\")?.getAttribute('locvalue') ? \"(\" + document.getElementById(\"root\")?.getAttribute('locvalue') + \")\" : \"\"}</div></Link> : <div className=\"font-bold mt-3\">Release Dates</div>}\n                        {isMovie ? <div className=\"mb-5\">{releaseDates[0] ? releaseDates.map((date, id) => (\n                            <div key={id}>{date}</div>\n                        )) : <div>No Dates Added\n                            <Link to={`/movie/${movieId}/releases/`}><div className=\"font-bold\">Release Dates (US)</div></Link>\n                            {setReleases(\"US\")?.map((date, id) => (\n                                <div key={id}>{date}</div>\n                            ))}\n                        </div>}</div> : <div>\n                            <div>First Air Date: {formatDate(item.first_air_date, \"Not Added\")}</div>\n                            <div>Last Air Date: {formatDate(item.last_air_date, \"Not Added\")}</div>\n                        </div>}\n                    </div>\n                    <div id=\"media_cast\" className=\"relative w-[40vw] h-[85vh] mt-[15vh] mr-[5vw] ml-auto right-0 overflow-y-scroll rounded-2xl\">\n                        <div className=\"flex_center absolute right-0 h-[4vh] w-full\">\n                            <div className={`font-bold mr-5 text-[3vh] cursor-pointer ${castTab ? \"\" : \"text-[#878787]\"}`} onClick={() => setCastTab(true)}>Cast</div>\n                            <div className={`font-bold text-[3vh] cursor-pointer ${!castTab ? \"\" : \"text-[#878787]\"}`} onClick={() => setCastTab(false)}>Crew</div>\n                        </div>\n                        {castTab ? item.credits?.cast?.map((cast, id) => (\n                            <Link to={`/person/${cast.id}/`} key={id} className=\"mr-5 mt-[4vh] w-full whitespace-pre-wrap rounded-2xl flex overflow-y-clip relative mb-2\">\n                                <div className=\"cast_names h-full m-auto\">\n                                    <div className=\"font-bold\">{cast.name}</div>\n                                    <div>{cast.character}</div>\n                                </div>\n                                <img src={cast.profile_path ? `https://image.tmdb.org/t/p/w500/${cast.profile_path}` : personWithNoImage} alt={cast.name} className=\"w-[25%] rounded-2xl\"/>\n                            </Link>\n                        )) : item.credits?.crew?.map((crew, id) => (\n                            <Link to={`/person/${crew.id}/`} key={id} className=\"mr-5 mt-[4vh] w-full whitespace-pre-wrap rounded-2xl flex overflow-y-clip relative mb-2\">\n                                <div className=\"cast_names h-full m-auto\">\n                                    <div className=\"font-bold\">{crew.name}</div>\n                                    <div>{crew.job}</div>\n                                </div>\n                                <img src={crew.profile_path ? `https://image.tmdb.org/t/p/w500/${crew.profile_path}` : personWithNoImage} alt={crew.name} className=\"w-[25%] rounded-2xl\"/>\n                            </Link>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n}"],"names":["MediaPage","movieId","useParams","televisionId","isMovie","movieRequest","requests","document","getElementById","getAttribute","tvRequest","useState","item","setItem","isLoading","setIsLoading","castTab","setCastTab","isUserLoggedIn","setIsUserLoggedIn","releaseDates","setReleaseDates","playTrailer","setPlayTrailer","trailerPath","setTrailerPath","userLists","setUserLists","isOnWatchlist","setIsOnWatchlist","rating","setRating","isRated","setIsRated","playLink","setPlayLink","React","ratingPopoverAnchorEl","setRatingPopoverAnchorEl","isRatingPopoverOpen","Boolean","ratingPopoverId","undefined","listPopoverAnchorEl","setListPopoverAnchorEl","isListPopoverOpen","listPopoverId","handleScreenResize","window","innerWidth","innerHeight","style","width","gridRowStart","setReleases","location","dates","getReleaseDateItem","setMainTrailer","data","getMainTrailer","onmousedown","useEffect","auth","user","LoadSettingsData","then","axios","response","console","log","getMovieDataFromDB","r","catch","err","error","getWatchProviderLink","handleRatingClose","handleListPopoverClose","listItem","list","movies","info","id","title","name","poster_path","profile_path","backdrop_path","release_date","overview","biography","push","trim","setDoc","doc","db","toString","description","backdrop","formatEpisodeAndSeasonStrings","num","type","addEventListener","useHistory","listen","removeEventListener","Layout","className","src","allowFullScreen","loading","onLoad","alt","imdb_id","href","imdbIcon","genres","map","homepage","belongs_to_collection","to","tagline","runtime","Tooltip","justwatchIcon","placement","onClick","event","currentTarget","Popover","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","addToWatchlist","addItemToList","Rating","value","defaultValue","max","icon","emptyIcon","onChange","newValue","saveRating","handleRatingChange","budget","formatNumber","revenue","number_of_episodes","number_of_seasons","status","production_countries","country","iso_3166_1","production_companies","company","date","formatDate","first_air_date","last_air_date","credits","cast","character","personWithNoImage","crew","job"],"sourceRoot":""}